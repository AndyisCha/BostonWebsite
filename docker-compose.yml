version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: boston_english_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - boston-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/boston_english_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      NODE_ENV: development
      PORT: 3001
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/src:/app/src
    depends_on:
      - postgres
    networks:
      - boston-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./client/src:/app/src
      - ./client/public:/app/public
    depends_on:
      - server
    networks:
      - boston-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - client
      - server
    networks:
      - boston-network

volumes:
  postgres_data:

networks:
  boston-network:
    driver: bridge